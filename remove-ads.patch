From e64887662fae6e6d002d87a6b7a7ddbbbfd9c8ed Mon Sep 17 00:00:00 2001
From: vehlwn <36479428+vehlwn@users.noreply.github.com>
Date: Wed, 22 Jun 2022 16:57:44 +0400
Subject: [PATCH 01/16] Update gitignore

---
 .gitignore | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/.gitignore b/.gitignore
index f893d4bad..cf3c5b89e 100644
--- a/.gitignore
+++ b/.gitignore
@@ -52,3 +52,6 @@ stage
 *.*~
 .idea/
 cmake-build-debug/
+.cache/
+build/
+compile_commands.json
-- 
2.48.1


From 0e310036c54b370ff854a8ffd5063ef630402db4 Mon Sep 17 00:00:00 2001
From: vehlwn <36479428+vehlwn@users.noreply.github.com>
Date: Wed, 22 Jun 2022 16:57:44 +0400
Subject: [PATCH 02/16] Disable sponsored messages

---
 Telegram/SourceFiles/data/components/sponsored_messages.cpp | 5 -----
 1 file changed, 5 deletions(-)

diff --git a/Telegram/SourceFiles/data/components/sponsored_messages.cpp b/Telegram/SourceFiles/data/components/sponsored_messages.cpp
index 5ae9d8b2c..608cd0b2f 100644
--- a/Telegram/SourceFiles/data/components/sponsored_messages.cpp
+++ b/Telegram/SourceFiles/data/components/sponsored_messages.cpp
@@ -210,11 +210,6 @@ void SponsoredMessages::inject(
 }
 
 bool SponsoredMessages::canHaveFor(not_null<History*> history) const {
-	if (history->peer->isChannel()) {
-		return true;
-	} else if (const auto user = history->peer->asUser()) {
-		return user->isBot();
-	}
 	return false;
 }
 
-- 
2.48.1


From db765612a9fbd2799410a43a79ed9bd153d61611 Mon Sep 17 00:00:00 2001
From: vehlwn <36479428+vehlwn@users.noreply.github.com>
Date: Fri, 19 May 2023 17:51:54 +0400
Subject: [PATCH 03/16] Cannot react

---
 Telegram/SourceFiles/history/history_item.cpp | 13 +++----------
 1 file changed, 3 insertions(+), 10 deletions(-)

diff --git a/Telegram/SourceFiles/history/history_item.cpp b/Telegram/SourceFiles/history/history_item.cpp
index 08afc9a2e..0326c4a48 100644
--- a/Telegram/SourceFiles/history/history_item.cpp
+++ b/Telegram/SourceFiles/history/history_item.cpp
@@ -2606,16 +2606,7 @@ void HistoryItem::translationDone(LanguageId to, TextWithEntities result) {
 }
 
 bool HistoryItem::canReact() const {
-	if (!isRegular()) {
-		return false;
-	} else if (isService()) {
-		return (_flags & MessageFlag::ReactionsAllowed);
-	} else if (const auto media = this->media()) {
-		if (media->call()) {
-			return (_flags & MessageFlag::ReactionsAllowed);
-		}
-	}
-	return true;
+    return false;
 }
 
 void HistoryItem::addPaidReaction(
@@ -3992,6 +3983,7 @@ void HistoryItem::createComponentsHelper(HistoryItemCommonFields &&fields) {
 }
 
 void HistoryItem::setReactions(const MTPMessageReactions *reactions) {
+    return;
 	Expects(!_reactions);
 
 	if (changeReactions(reactions) && _reactions->hasUnread()) {
@@ -4000,6 +3992,7 @@ void HistoryItem::setReactions(const MTPMessageReactions *reactions) {
 }
 
 void HistoryItem::updateReactions(const MTPMessageReactions *reactions) {
+    return;
 	const auto wasRecentUsers = LookupRecentUnreadReactedUsers(this);
 	const auto hadUnread = hasUnreadReaction();
 	const auto changed = changeReactions(reactions);
-- 
2.48.1


From a5562a140e7e9358ab13119d01b9bc95b2d2ca17 Mon Sep 17 00:00:00 2001
From: vehlwn <36479428+vehlwn@users.noreply.github.com>
Date: Mon, 22 May 2023 16:29:10 +0400
Subject: [PATCH 04/16] Disable webpage preview on my messages

---
 Telegram/SourceFiles/apiwrap.cpp                             | 5 ++---
 .../history/view/controls/history_view_webpage_processor.cpp | 3 +--
 2 files changed, 3 insertions(+), 5 deletions(-)

diff --git a/Telegram/SourceFiles/apiwrap.cpp b/Telegram/SourceFiles/apiwrap.cpp
index c5f407394..ede7589eb 100644
--- a/Telegram/SourceFiles/apiwrap.cpp
+++ b/Telegram/SourceFiles/apiwrap.cpp
@@ -2172,7 +2172,7 @@ void ApiWrap::saveDraftsToCloud() {
 
 		auto flags = MTPmessages_SaveDraft::Flags(0);
 		auto &textWithTags = cloudDraft->textWithTags;
-		if (cloudDraft->webpage.removed) {
+		if (true) {
 			flags |= MTPmessages_SaveDraft::Flag::f_no_webpage;
 		} else if (!cloudDraft->webpage.url.isEmpty()) {
 			flags |= MTPmessages_SaveDraft::Flag::f_media;
@@ -3834,8 +3834,7 @@ void ApiWrap::sendMessage(MessageToSend &&message) {
 			sendFlags |= MTPmessages_SendMessage::Flag::f_reply_to;
 			mediaFlags |= MTPmessages_SendMedia::Flag::f_reply_to;
 		}
-		const auto ignoreWebPage = message.webPage.removed
-			|| (exactWebPage && !isLast);
+		const auto ignoreWebPage = true;
 		const auto manualWebPage = exactWebPage
 			&& !ignoreWebPage
 			&& (message.webPage.manual || (isLast && !isFirst));
diff --git a/Telegram/SourceFiles/history/view/controls/history_view_webpage_processor.cpp b/Telegram/SourceFiles/history/view/controls/history_view_webpage_processor.cpp
index 379ffb92e..dc0fb6e73 100644
--- a/Telegram/SourceFiles/history/view/controls/history_view_webpage_processor.cpp
+++ b/Telegram/SourceFiles/history/view/controls/history_view_webpage_processor.cpp
@@ -350,8 +350,7 @@ void WebpageProcessor::checkNow(bool force) {
 }
 
 void WebpageProcessor::checkPreview() {
-	const auto previewRestricted = _history->peer
-		&& _history->peer->amRestricted(ChatRestriction::EmbedLinks);
+	const auto previewRestricted = true;
 	if (_parsedLinks.empty()) {
 		_draft.removed = false;
 	}
-- 
2.48.1


From caabd8cb2ce6d87ccdcc07af35ba8f168893c82d Mon Sep 17 00:00:00 2001
From: vehlwn <36479428+vehlwn@users.noreply.github.com>
Date: Tue, 23 May 2023 17:08:09 +0400
Subject: [PATCH 05/16] Disable webpage previews on other users messages

---
 Telegram/SourceFiles/history/history_item.cpp | 30 ++-----------------
 1 file changed, 2 insertions(+), 28 deletions(-)

diff --git a/Telegram/SourceFiles/history/history_item.cpp b/Telegram/SourceFiles/history/history_item.cpp
index 0326c4a48..1c283f7d0 100644
--- a/Telegram/SourceFiles/history/history_item.cpp
+++ b/Telegram/SourceFiles/history/history_item.cpp
@@ -319,34 +319,8 @@ std::unique_ptr<Data::Media> HistoryItem::CreateMedia(
 		}, [](const MTPDdocumentEmpty &) -> Result {
 			return nullptr;
 		});
-	}, [&](const MTPDmessageMediaWebPage &media) {
-		using Flag = MediaWebPageFlag;
-		const auto flags = Flag()
-			| (media.is_force_large_media()
-				? Flag::ForceLargeMedia
-				: Flag())
-			| (media.is_force_small_media()
-				? Flag::ForceSmallMedia
-				: Flag())
-			| (media.is_manual() ? Flag::Manual : Flag())
-			| (media.is_safe() ? Flag::Safe : Flag());
-		return media.vwebpage().match([](const MTPDwebPageEmpty &) -> Result {
-			return nullptr;
-		}, [&](const MTPDwebPagePending &webpage) -> Result {
-			return std::make_unique<Data::MediaWebPage>(
-				item,
-				item->history()->owner().processWebpage(webpage),
-				flags);
-		}, [&](const MTPDwebPage &webpage) -> Result {
-			return std::make_unique<Data::MediaWebPage>(
-				item,
-				item->history()->owner().processWebpage(webpage),
-				flags);
-		}, [](const MTPDwebPageNotModified &) -> Result {
-			LOG(("API Error: "
-				"webPageNotModified is unexpected in message media."));
-			return nullptr;
-		});
+	}, [&](const MTPDmessageMediaWebPage &media) -> Result {
+		return nullptr;
 	}, [&](const MTPDmessageMediaGame &media) -> Result {
 		return media.vgame().match([&](const MTPDgame &game) {
 			return std::make_unique<Data::MediaGame>(
-- 
2.48.1


From 382d9ada980ead31e0f50ad9fcd616659742c12e Mon Sep 17 00:00:00 2001
From: vehlwn <36479428+vehlwn@users.noreply.github.com>
Date: Mon, 22 May 2023 17:11:53 +0400
Subject: [PATCH 06/16] Disable context menu item N Reacted

---
 Telegram/SourceFiles/history/history_inner_widget.cpp          | 3 +--
 .../SourceFiles/history/view/history_view_context_menu.cpp     | 3 +--
 2 files changed, 2 insertions(+), 4 deletions(-)

diff --git a/Telegram/SourceFiles/history/history_inner_widget.cpp b/Telegram/SourceFiles/history/history_inner_widget.cpp
index e470c651e..d121539c6 100644
--- a/Telegram/SourceFiles/history/history_inner_widget.cpp
+++ b/Telegram/SourceFiles/history/history_inner_widget.cpp
@@ -2188,8 +2188,7 @@ void HistoryInner::showContextMenu(QContextMenuEvent *e, bool showFromTouch) {
 		return item;
 	};
 	const auto leaderOrSelf = groupLeaderOrSelf(_dragStateItem);
-	const auto hasWhoReactedItem = leaderOrSelf
-		&& Api::WhoReactedExists(leaderOrSelf, Api::WhoReactedList::All);
+	const auto hasWhoReactedItem = false;
 	using namespace HistoryView::Reactions;
 	const auto clickedReaction = ReactionIdOfLink(link);
 	const auto linkPhoneNumber = link
diff --git a/Telegram/SourceFiles/history/view/history_view_context_menu.cpp b/Telegram/SourceFiles/history/view/history_view_context_menu.cpp
index d1cead754..99704a15d 100644
--- a/Telegram/SourceFiles/history/view/history_view_context_menu.cpp
+++ b/Telegram/SourceFiles/history/view/history_view_context_menu.cpp
@@ -1177,8 +1177,7 @@ base::unique_qptr<Ui::PopupMenu> FillContextMenu(
 		: nullptr;
 	const auto hasSelection = !request.selectedItems.empty()
 		|| !request.selectedText.empty();
-	const auto hasWhoReactedItem = item
-		&& Api::WhoReactedExists(item, Api::WhoReactedList::All);
+	const auto hasWhoReactedItem = false;
 
 	auto result = base::make_unique_q<Ui::PopupMenu>(
 		list,
-- 
2.48.1


From ab5749e47ce7fc04bda42d1c0830d2a666ccbcad Mon Sep 17 00:00:00 2001
From: vehlwn <36479428+vehlwn@users.noreply.github.com>
Date: Wed, 24 May 2023 10:25:35 +0400
Subject: [PATCH 07/16] Cannot pin messages; disabled PinnedBar

---
 Telegram/SourceFiles/data/data_peer.cpp         | 2 +-
 Telegram/SourceFiles/history/history_widget.cpp | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/Telegram/SourceFiles/data/data_peer.cpp b/Telegram/SourceFiles/data/data_peer.cpp
index 5c7536083..bcf121682 100644
--- a/Telegram/SourceFiles/data/data_peer.cpp
+++ b/Telegram/SourceFiles/data/data_peer.cpp
@@ -1443,7 +1443,7 @@ Data::RestrictionCheckResult PeerData::amRestricted(
 				: Result::Allowed())
 			: (right == ChatRestriction::PinMessages)
 			? ((user->flags() & UserDataFlag::CanPinMessages)
-				? Result::Allowed()
+				? Result::Explicit()
 				: Result::Explicit())
 			: Result::Allowed();
 	} else if (const auto channel = asChannel()) {
diff --git a/Telegram/SourceFiles/history/history_widget.cpp b/Telegram/SourceFiles/history/history_widget.cpp
index 48cecb130..48bc80dbd 100644
--- a/Telegram/SourceFiles/history/history_widget.cpp
+++ b/Telegram/SourceFiles/history/history_widget.cpp
@@ -7545,7 +7545,7 @@ void HistoryWidget::checkPinnedBarState() {
 		}
 		return;
 	}
-	if (_pinnedBar || !universalPinnedId) {
+	if (true) {
 		return;
 	}
 
-- 
2.48.1


From 025f62e3cf971021de1f552a180eaf53859055db Mon Sep 17 00:00:00 2001
From: vehlwn <36479428+vehlwn@users.noreply.github.com>
Date: Wed, 24 May 2023 10:55:01 +0400
Subject: [PATCH 08/16] Disable record button

---
 Telegram/SourceFiles/history/history_widget.cpp           | 8 +-------
 .../view/controls/history_view_compose_controls.cpp       | 7 +------
 2 files changed, 2 insertions(+), 13 deletions(-)

diff --git a/Telegram/SourceFiles/history/history_widget.cpp b/Telegram/SourceFiles/history/history_widget.cpp
index 48bc80dbd..dbc54780f 100644
--- a/Telegram/SourceFiles/history/history_widget.cpp
+++ b/Telegram/SourceFiles/history/history_widget.cpp
@@ -5167,13 +5167,7 @@ bool HistoryWidget::isSearching() const {
 }
 
 bool HistoryWidget::showRecordButton() const {
-	return (_recordAvailability != Webrtc::RecordAvailability::None)
-		&& !_voiceRecordBar->isListenState()
-		&& !_voiceRecordBar->isRecordingByAnotherBar()
-		&& !HasSendText(_field)
-		&& !_previewDrawPreview
-		&& (_replyTo || !readyToForward())
-		&& !_editMsgId;
+	return false;
 }
 
 bool HistoryWidget::showInlineBotCancel() const {
diff --git a/Telegram/SourceFiles/history/view/controls/history_view_compose_controls.cpp b/Telegram/SourceFiles/history/view/controls/history_view_compose_controls.cpp
index a0b676e44..1aaa15036 100644
--- a/Telegram/SourceFiles/history/view/controls/history_view_compose_controls.cpp
+++ b/Telegram/SourceFiles/history/view/controls/history_view_compose_controls.cpp
@@ -1519,12 +1519,7 @@ void ComposeControls::orderControls() {
 }
 
 bool ComposeControls::showRecordButton() const {
-	return (_recordAvailability != Webrtc::RecordAvailability::None)
-		&& !_voiceRecordBar->isListenState()
-		&& !_voiceRecordBar->isRecordingByAnotherBar()
-		&& !HasSendText(_field)
-		&& !readyToForward()
-		&& !isEditingMessage();
+	return false;
 }
 
 void ComposeControls::clearListenState() {
-- 
2.48.1


From cd70a975f3873a33e067ec752f5e5a1aa1e62c0b Mon Sep 17 00:00:00 2001
From: vehlwn <36479428+vehlwn@users.noreply.github.com>
Date: Wed, 24 May 2023 16:45:47 +0400
Subject: [PATCH 09/16] Disable calls

---
 .../view/history_view_top_bar_widget.cpp      | 25 +++----------------
 1 file changed, 3 insertions(+), 22 deletions(-)

diff --git a/Telegram/SourceFiles/history/view/history_view_top_bar_widget.cpp b/Telegram/SourceFiles/history/view/history_view_top_bar_widget.cpp
index 2e9ac641b..2c040f365 100644
--- a/Telegram/SourceFiles/history/view/history_view_top_bar_widget.cpp
+++ b/Telegram/SourceFiles/history/view/history_view_top_bar_widget.cpp
@@ -1173,31 +1173,12 @@ void TopBarWidget::updateControlsVisibility() {
 		&& !isOneColumn
 		&& _controller->canShowThirdSection()
 		&& !_chooseForReportReason);
-	const auto callsEnabled = [&] {
-		if (const auto peer = _activeChat.key.peer()) {
-			if (const auto user = peer->asUser()) {
-				return !user->isSelf()
-					&& !user->isBot()
-					&& !user->isInaccessible()
-					&& !peer->isServiceUser();
-			}
-		}
-		return false;
-	}();
+
+	const auto callsEnabled = false;
 	_call->setVisible(historyMode
 		&& callsEnabled
 		&& !_chooseForReportReason);
-	const auto groupCallsEnabled = [&] {
-		if (const auto peer = _activeChat.key.peer()) {
-			if (peer->canManageGroupCall()) {
-				return true;
-			} else if (const auto call = peer->groupCall()) {
-				return (call->fullCount() == 0);
-			}
-			return false;
-		}
-		return false;
-	}();
+	const auto groupCallsEnabled = false;
 	_groupCall->setVisible(historyMode
 		&& groupCallsEnabled
 		&& !_chooseForReportReason);
-- 
2.48.1


From ce1a8346217fcef1fe9bc07c74b731022c68394e Mon Sep 17 00:00:00 2001
From: vehlwn <36479428+vehlwn@users.noreply.github.com>
Date: Thu, 25 May 2023 14:38:14 +0400
Subject: [PATCH 10/16] Disable MUTE/UNMUTE button

---
 Telegram/SourceFiles/history/history_widget.cpp | 6 +-----
 1 file changed, 1 insertion(+), 5 deletions(-)

diff --git a/Telegram/SourceFiles/history/history_widget.cpp b/Telegram/SourceFiles/history/history_widget.cpp
index dbc54780f..ee1c8e33d 100644
--- a/Telegram/SourceFiles/history/history_widget.cpp
+++ b/Telegram/SourceFiles/history/history_widget.cpp
@@ -5155,11 +5155,7 @@ bool HistoryWidget::isChoosingTheme() const {
 }
 
 bool HistoryWidget::isMuteUnmute() const {
-	return _peer
-		&& ((_peer->isBroadcast() && !_peer->asChannel()->canPostMessages())
-			|| (_peer->isGigagroup() && !Data::CanSendAnything(_peer))
-			|| _peer->isRepliesChat()
-			|| _peer->isVerifyCodes());
+	return false;
 }
 
 bool HistoryWidget::isSearching() const {
-- 
2.48.1


From 8f36c90c5e0a421544168d5fa20bb89443204f6b Mon Sep 17 00:00:00 2001
From: vehlwn <36479428+vehlwn@users.noreply.github.com>
Date: Thu, 28 Sep 2023 09:28:21 +0400
Subject: [PATCH 11/16] Disable stories

---
 Telegram/SourceFiles/data/data_peer.cpp                   | 5 -----
 Telegram/SourceFiles/dialogs/dialogs_row.cpp              | 2 +-
 Telegram/SourceFiles/dialogs/dialogs_widget.cpp           | 7 +------
 Telegram/SourceFiles/info/profile/info_profile_widget.cpp | 4 ----
 4 files changed, 2 insertions(+), 16 deletions(-)

diff --git a/Telegram/SourceFiles/data/data_peer.cpp b/Telegram/SourceFiles/data/data_peer.cpp
index bcf121682..0d8b8ed6e 100644
--- a/Telegram/SourceFiles/data/data_peer.cpp
+++ b/Telegram/SourceFiles/data/data_peer.cpp
@@ -1639,11 +1639,6 @@ const Data::WallPaper *PeerData::wallPaper() const {
 }
 
 bool PeerData::hasActiveStories() const {
-	if (const auto user = asUser()) {
-		return user->hasActiveStories();
-	} else if (const auto channel = asChannel()) {
-		return channel->hasActiveStories();
-	}
 	return false;
 }
 
diff --git a/Telegram/SourceFiles/dialogs/dialogs_row.cpp b/Telegram/SourceFiles/dialogs/dialogs_row.cpp
index c39133e52..fcfd2eece 100644
--- a/Telegram/SourceFiles/dialogs/dialogs_row.cpp
+++ b/Telegram/SourceFiles/dialogs/dialogs_row.cpp
@@ -419,7 +419,7 @@ void Row::PaintCornerBadgeFrame(
 	q.translate(framePadding, framePadding);
 	auto hq = std::optional<PainterHighQualityEnabler>();
 	const auto photoSize = context.st->photoSize;
-	const auto storiesCount = data->storiesCount;
+	const auto storiesCount = 0;
 	if (storiesCount) {
 		hq.emplace(q);
 		const auto line = st::dialogsStoriesFull.lineTwice / 2.;
diff --git a/Telegram/SourceFiles/dialogs/dialogs_widget.cpp b/Telegram/SourceFiles/dialogs/dialogs_widget.cpp
index b7f0605fb..aa745dc0c 100644
--- a/Telegram/SourceFiles/dialogs/dialogs_widget.cpp
+++ b/Telegram/SourceFiles/dialogs/dialogs_widget.cpp
@@ -354,12 +354,7 @@ Widget::Widget(
 	object_ptr<Ui::IconButton>(this, st::dialogsLock))
 , _scroll(this)
 , _scrollToTop(_scroll, st::dialogsToUp)
-, _stories((_layout != Layout::Child)
-	? std::make_unique<Stories::List>(
-		this,
-		st::dialogsStoriesList,
-		_storiesContents.events() | rpl::flatten_latest())
-	: nullptr)
+, _stories(nullptr)
 , _searchTimer([=] { search(); })
 , _singleMessageSearch(&controller->session()) {
 	const auto makeChildListShown = [](PeerId peerId, float64 shown) {
diff --git a/Telegram/SourceFiles/info/profile/info_profile_widget.cpp b/Telegram/SourceFiles/info/profile/info_profile_widget.cpp
index 48b0107ed..cd0bac66d 100644
--- a/Telegram/SourceFiles/info/profile/info_profile_widget.cpp
+++ b/Telegram/SourceFiles/info/profile/info_profile_widget.cpp
@@ -119,10 +119,6 @@ rpl::producer<QString> Widget::title() {
 }
 
 rpl::producer<Dialogs::Stories::Content> Widget::titleStories() {
-	const auto peer = controller()->key().peer();
-	if (peer && !peer->isChat()) {
-		return Dialogs::Stories::LastForPeer(peer);
-	}
 	return nullptr;
 }
 
-- 
2.48.1


From e4b15fa095be1697be62013438c29ffe0d6b6257 Mon Sep 17 00:00:00 2001
From: vehlwn <36479428+vehlwn@users.noreply.github.com>
Date: Wed, 8 Nov 2023 14:21:52 +0400
Subject: [PATCH 12/16] Use sccache; use mold linker

---
 CMakeLists.txt | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 9393d81d7..509e08646 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -35,6 +35,10 @@ project(Telegram
 )
 set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT Telegram)
 
+set(CMAKE_C_COMPILER_LAUNCHER "/usr/bin/sccache")
+set(CMAKE_CXX_COMPILER_LAUNCHER "/usr/bin/sccache")
+set(CMAKE_EXE_LINKER_FLAGS "-fuse-ld=mold")
+
 get_filename_component(third_party_loc "Telegram/ThirdParty" REALPATH)
 get_filename_component(submodules_loc "Telegram" REALPATH)
 get_filename_component(cmake_helpers_loc "cmake" REALPATH)
-- 
2.48.1


From 5a8c11b8b0ff914584ca0d4a32d176cad12a2cb4 Mon Sep 17 00:00:00 2001
From: vehlwn <36479428+vehlwn@users.noreply.github.com>
Date: Wed, 8 Nov 2023 17:22:20 +0400
Subject: [PATCH 13/16] Remove ability to copy monospace text via click

---
 Telegram/SourceFiles/core/ui_integration.cpp | 4 ----
 1 file changed, 4 deletions(-)

diff --git a/Telegram/SourceFiles/core/ui_integration.cpp b/Telegram/SourceFiles/core/ui_integration.cpp
index 83d287a16..9f3af3b22 100644
--- a/Telegram/SourceFiles/core/ui_integration.cpp
+++ b/Telegram/SourceFiles/core/ui_integration.cpp
@@ -248,10 +248,6 @@ std::shared_ptr<ClickHandler> UiIntegration::createLinkHandler(
 		}
 	} break;
 
-	case EntityType::Code:
-		return std::make_shared<MonospaceClickHandler>(data.text, data.type);
-	case EntityType::Pre:
-		return std::make_shared<MonospaceClickHandler>(data.text, data.type);
 	case EntityType::Phone:
 		return my->session
 			? std::make_shared<PhoneClickHandler>(my->session, data.text)
-- 
2.48.1


From 301236e5f597095aff999b7ab0a3cfab263614e9 Mon Sep 17 00:00:00 2001
From: vehlwn <36479428+vehlwn@users.noreply.github.com>
Date: Sun, 19 Nov 2023 12:23:06 +0400
Subject: [PATCH 14/16] Disable background color on replies

---
 Telegram/SourceFiles/ui/chat/chat_style.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/Telegram/SourceFiles/ui/chat/chat_style.h b/Telegram/SourceFiles/ui/chat/chat_style.h
index 6247d3879..c79f06dac 100644
--- a/Telegram/SourceFiles/ui/chat/chat_style.h
+++ b/Telegram/SourceFiles/ui/chat/chat_style.h
@@ -36,7 +36,7 @@ inline constexpr auto kColorPatternsCount = Text::kMaxQuoteOutlines;
 inline constexpr auto kColorIndexCount = uint8(1 << 6);
 inline constexpr auto kSimpleColorIndexCount = uint8(7);
 
-inline constexpr auto kDefaultBgOpacity = 0.12;
+inline constexpr auto kDefaultBgOpacity = 0;
 inline constexpr auto kDefaultOutline1Opacity = 0.9;
 inline constexpr auto kDefaultOutline2Opacity = 0.3;
 inline constexpr auto kDefaultOutline3Opacity = 0.6;
-- 
2.48.1


From 18c261975e260fd657272d0b1d8a2b57f32bca4b Mon Sep 17 00:00:00 2001
From: vehlwn <36479428+vehlwn@users.noreply.github.com>
Date: Sun, 19 Nov 2023 12:56:39 +0400
Subject: [PATCH 15/16] Disable background emoji on replies

---
 Telegram/SourceFiles/history/view/history_view_reply.cpp | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

diff --git a/Telegram/SourceFiles/history/view/history_view_reply.cpp b/Telegram/SourceFiles/history/view/history_view_reply.cpp
index 3d29c806f..9a7f62a34 100644
--- a/Telegram/SourceFiles/history/view/history_view_reply.cpp
+++ b/Telegram/SourceFiles/history/view/history_view_reply.cpp
@@ -625,9 +625,7 @@ void Reply::paint(
 	const auto &quoteSt = _hasQuoteIcon
 		? st::messageTextStyle.blockquote
 		: st::messageQuoteStyle;
-	const auto backgroundEmoji = backgroundEmojiId
-		? st->backgroundEmojiData(backgroundEmojiId).get()
-		: nullptr;
+	const auto backgroundEmoji = (Ui::BackgroundEmojiData*)nullptr;
 	const auto backgroundEmojiCache = backgroundEmoji
 		? &backgroundEmoji->caches[Ui::BackgroundEmojiData::CacheIndex(
 			selected,
-- 
2.48.1


From cf4f062eb70e9e6aa222b1df6bafaea8efd37a14 Mon Sep 17 00:00:00 2001
From: vehlwn <36479428+vehlwn@users.noreply.github.com>
Date: Tue, 12 Dec 2023 14:28:34 +0400
Subject: [PATCH 16/16] Allow copying text from restricted posts

---
 .../history/history_inner_widget.cpp          |  4 ++--
 .../history/view/history_view_list_widget.cpp | 24 ++++---------------
 .../media/view/media_view_overlay_widget.cpp  |  8 +------
 3 files changed, 7 insertions(+), 29 deletions(-)

diff --git a/Telegram/SourceFiles/history/history_inner_widget.cpp b/Telegram/SourceFiles/history/history_inner_widget.cpp
index d121539c6..7d07c860f 100644
--- a/Telegram/SourceFiles/history/history_inner_widget.cpp
+++ b/Telegram/SourceFiles/history/history_inner_widget.cpp
@@ -2977,12 +2977,12 @@ void HistoryInner::showContextMenu(QContextMenuEvent *e, bool showFromTouch) {
 }
 
 bool HistoryInner::hasCopyRestriction(HistoryItem *item) const {
-	return !_peer->allowsForwarding() || (item && item->forbidsForward());
+	return false;
 }
 
 bool HistoryInner::hasCopyMediaRestriction(
 		not_null<HistoryItem*> item) const {
-	return hasCopyRestriction(item) || item->forbidsSaving();
+	return false;
 }
 
 bool HistoryInner::showCopyRestriction(HistoryItem *item) {
diff --git a/Telegram/SourceFiles/history/view/history_view_list_widget.cpp b/Telegram/SourceFiles/history/view/history_view_list_widget.cpp
index 7a2d62cd9..a1301f663 100644
--- a/Telegram/SourceFiles/history/view/history_view_list_widget.cpp
+++ b/Telegram/SourceFiles/history/view/history_view_list_widget.cpp
@@ -1581,35 +1581,19 @@ bool ListWidget::isEmpty() const {
 }
 
 bool ListWidget::hasCopyRestriction(HistoryItem *item) const {
-	return _delegate->listCopyRestrictionType(item)
-		!= CopyRestrictionType::None;
+	return false;
 }
 
 bool ListWidget::hasCopyMediaRestriction(not_null<HistoryItem*> item) const {
-	return _delegate->listCopyMediaRestrictionType(item)
-		!= CopyRestrictionType::None;
+	return false;
 }
 
 bool ListWidget::showCopyRestriction(HistoryItem *item) {
-	const auto type = _delegate->listCopyRestrictionType(item);
-	if (type == CopyRestrictionType::None) {
-		return false;
-	}
-	_delegate->listUiShow()->showToast((type == CopyRestrictionType::Channel)
-		? tr::lng_error_nocopy_channel(tr::now)
-		: tr::lng_error_nocopy_group(tr::now));
-	return true;
+    return false;
 }
 
 bool ListWidget::showCopyMediaRestriction(not_null<HistoryItem*> item) {
-	const auto type = _delegate->listCopyMediaRestrictionType(item);
-	if (type == CopyRestrictionType::None) {
-		return false;
-	}
-	_delegate->listUiShow()->showToast((type == CopyRestrictionType::Channel)
-		? tr::lng_error_nocopy_channel(tr::now)
-		: tr::lng_error_nocopy_group(tr::now));
-	return true;
+	return false;
 }
 
 bool ListWidget::hasCopyRestrictionForSelected() const {
diff --git a/Telegram/SourceFiles/media/view/media_view_overlay_widget.cpp b/Telegram/SourceFiles/media/view/media_view_overlay_widget.cpp
index f5cf304fd..3e9ff3812 100644
--- a/Telegram/SourceFiles/media/view/media_view_overlay_widget.cpp
+++ b/Telegram/SourceFiles/media/view/media_view_overlay_widget.cpp
@@ -1104,13 +1104,7 @@ QSize OverlayWidget::flipSizeByRotation(QSize size) const {
 }
 
 bool OverlayWidget::hasCopyMediaRestriction(bool skipPremiumCheck) const {
-	if (const auto story = _stories ? _stories->story() : nullptr) {
-		return skipPremiumCheck
-			? !story->canDownloadIfPremium()
-			: !story->canDownloadChecked();
-	}
-	return (_history && !_history->peer->allowsForwarding())
-		|| (_message && _message->forbidsSaving());
+	return false;
 }
 
 bool OverlayWidget::showCopyMediaRestriction(bool skipPRemiumCheck) {
-- 
2.48.1

